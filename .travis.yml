language: bash
dist: focal
sudo: required
services:
  - docker

env:
  global:
    - GIT_BRANCH=$TRAVIS_BRANCH
    - IS_PULL_REQUEST=$TRAVIS_PULL_REQUEST
    - RELEASE_BRANCH=main
    - DOCKER_NAMESPACE=jordancartwright
    - DOCKER_IMAGE=simple-weather-api
    - SUPPORTED_ARCHITECTURES="amd64 arm64"
    - VERSION=$(git log -1 --pretty=%h)

jobs:
  include:
  - stage: Test
    arch: s390x
    script:
      - "docker run -v$TRAVIS_BUILD_DIR:/go/src -w /go/src golang:1.16 make test"
  - stage: Build
    if: branch = main AND type != pull_request
    os: linux
    arch: amd64
    script:
      - './.ci/build.sh --image ${DOCKER_IMAGE}:${VERSION} --push'
  - if: branch = main AND type != pull_request
    os: linux
    arch: arm64
    script:
      - './.ci/build.sh --image ${DOCKER_IMAGE}:${VERSION} --push'

  - stage: Tag
    if: branch = main AND type != pull_request
    os: linux
    arch: s390x
    script:
      - './.ci/tag-image.sh --image ${DOCKER_IMAGE}:${VERSION} --tags "latest"'

  - stage: Manifest
    if: branch = main AND type != pull_request
    os: linux
    arch: s390x
    script:
      - sudo bash ./.ci/enable-experimental.sh
      - sudo bash ./.ci/manifest.sh --image ${DOCKER_IMAGE} --manifest ${VERSION} --latest --push

  - stage: Deploy
    if: branch = main AND type != pull_request
    script:
      - "echo Starting deployment to Heroku"
      - curl https://cli-assets.heroku.com/install.sh | sh
      - heroku version
      - docker pull  ${DOCKER_NAMESPACE}/${DOCKER_IMAGE}:${VERSION}
      - docker tag ${DOCKER_NAMESPACE}/${DOCKER_IMAGE}:${VERSION} registry.heroku.com/${HEROKU_APP_NAME}/web
      - heroku container:login
      - docker push registry.heroku.com/${HEROKU_APP_NAME}/web
      - heroku container:release web --app=${HEROKU_APP_NAME}
